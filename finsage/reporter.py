# finsage/reporter.py

import matplotlib.pyplot as plt
from jinja2 import Environment, FileSystemLoader
from xhtml2pdf import pisa
import os
import uuid
import base64


def generate_bar_chart(data, title, filename):
    if not data:
        print(f"[WARN] Skipping chart for '{title}' - no data.")
        return
    labels, values = zip(*data)
    plt.figure(figsize=(8, 4))
    plt.bar(labels, values)
    plt.title(title)
    plt.xticks(rotation=30, ha="right")
    plt.tight_layout()
    plt.savefig(filename)
    plt.close()


def encode_image_to_base64(path):
    if not os.path.exists(path):
        return None
    with open(path, "rb") as image_file:
        return base64.b64encode(image_file.read()).decode('utf-8')


def generate_report(output_path, pl_summary, cf_summary):
    chart_dir = "temp_charts"
    os.makedirs(chart_dir, exist_ok=True)

    revenue_chart_path = os.path.join(chart_dir, f"rev_{uuid.uuid4()}.png")
    cost_chart_path = os.path.join(chart_dir, f"cost_{uuid.uuid4()}.png")
    inflow_chart_path = os.path.join(chart_dir, f"inflow_{uuid.uuid4()}.png")
    outflow_chart_path = os.path.join(chart_dir, f"outflow_{uuid.uuid4()}.png")

    generate_bar_chart(pl_summary.get('top_revenue_drivers', []), "Top Revenue Drivers", revenue_chart_path)
    generate_bar_chart(pl_summary.get('top_cost_drivers', []), "Top Cost Drivers", cost_chart_path)
    generate_bar_chart(cf_summary.get('top_inflows', []), "Major Cash Inflows", inflow_chart_path)
    generate_bar_chart(cf_summary.get('top_outflows', []), "Major Cash Outflows", outflow_chart_path)

    # Convert images to base64
    revenue_chart = encode_image_to_base64(revenue_chart_path)
    cost_chart = encode_image_to_base64(cost_chart_path)
    inflow_chart = encode_image_to_base64(inflow_chart_path)
    outflow_chart = encode_image_to_base64(outflow_chart_path)

    env = Environment(loader=FileSystemLoader("templates"))
    template = env.get_template("report_template.html")

    html_out = template.render(
        revenue_chart=revenue_chart,
        cost_chart=cost_chart,
        inflow_chart=inflow_chart,
        outflow_chart=outflow_chart,
        pl_summary=pl_summary,
        cf_summary=cf_summary,
        disclaimer="This report was automatically generated by FinSage. It is intended for informational purposes only. The authors of this tool bear no liability for decisions made based on this output."
    )

    with open("temp_report.html", "w") as f:
        f.write(html_out)

    with open("temp_report.html", "r") as html_file:
        with open(output_path, "wb") as pdf_file:
            pisa.CreatePDF(html_file.read(), dest=pdf_file)

    for chart_path in [revenue_chart_path, cost_chart_path, inflow_chart_path, outflow_chart_path]:
        if os.path.exists(chart_path):
            os.remove(chart_path)
    if os.path.exists("temp_report.html"):
        os.remove("temp_report.html")